!function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";function i(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function a(t,e,r){return e&&n(t.prototype,e),r&&n(t,r),t}r.r(e);var o=function(t,e,r){return Math.max(e,Math.min(r,t))},s=function(t){return~t>>>0},h=function(t,e,r){var i=(1<<r)-1;return t<<(e%=r)&i|(t&i)>>r-e},l=function(t){for(var e=0,r=1779033703^t.length;e<t.length;e++)r=(r=Math.imul(r^t.charCodeAt(e),3432918353))<<13|r>>>19;return function(){return r=Math.imul(r^r>>>16,2246822507),r=Math.imul(r^r>>>13,3266489909),(r^=r>>>16)>>>0}},u=function(){function t(e){i(this,t),this.state=e}return a(t,[{key:"next",value:function(){var t=this.state+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967295}}]),t}(),y=function(){function t(e){i(this,t),void 0!==e&&(e=parseInt(e,36)),e||(e=(new Date).toISOString(),e=l(e)()),this.generator=new u(e)}return a(t,[{key:"next",value:function(){return this.generator.next()}},{key:"getState",value:function(){return this.generator.state.toString(36)}}]),t}();function c(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var f=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=e,this.height=r,this.cells=new Array(this.width*this.height).fill(0)}var e,r,i;return e=t,(r=[{key:"reset",value:function(){this.cells=new Array(this.width*this.height).fill(0)}},{key:"within",value:function(t,e){return t>=0&&t<this.width&&e>=0&&e<this.height}},{key:"set",value:function(t,e,r){t=o(t,0,this.width-1),e=o(e,0,this.height-1),this.cells[e*this.width+t]=r}},{key:"get",value:function(t,e){return t=o(t,0,this.width-1),e=o(e,0,this.height-1),this.cells[e*this.width+t]}}])&&c(e.prototype,r),i&&c(e,i),t}(),p={NorthDoor:Math.pow(2,0),NorthWall:Math.pow(2,1),EastDoor:Math.pow(2,2),EastWall:Math.pow(2,3),SouthDoor:Math.pow(2,4),SouthWall:Math.pow(2,5),WestDoor:Math.pow(2,6),WestWall:Math.pow(2,7),ALL:256};p.North=p.NorthDoor|p.NorthWall,p.East=p.EastDoor|p.EastWall,p.South=p.SouthDoor|p.SouthWall,p.West=p.WestDoor|p.WestWall,p.DOOR_MASK=p.NorthDoor|p.EastDoor|p.SouthDoor|p.WestDoor,p.WALL_MASK=p.NorthWall|p.EastWall|p.SouthWall|p.WestWall;var d=[{x:0,y:-1},{x:0,y:-1},{x:1,y:0},{x:1,y:0},{x:0,y:1},{x:0,y:1},{x:-1,y:0},{x:-1,y:0}],g=function(t,e,r){return{x:t+d[r].x,y:e+d[r].y}},v=function(t){return h(t,4,8)},S=function(t,e,r){var i=r|h(r,1,8);return e=v(e)&i,t&s(i)|e},O=function t(e,r,i,n,a,o){var l=a=v(a);o>0&&(l=function(t,e){var r=Math.floor(t.next()*p.ALL),i=Math.floor(t.next()*p.ALL),n=r&p.DOOR_MASK|e&p.DOOR_MASK;return(i&p.WALL_MASK|e&p.WALL_MASK)&s(h(n,1,8))|n}(r,a)),l=function(t,e,r,i){for(var n=0;n<8;n+=2){var a=1<<n,o=1<<n+1,h=g(e,r,n);if(t.within(h.x,h.y)){var l=t.get(h.x,h.y);0!==l&&(i=S(i,l,a))}else i&=s(a|o)}return i}(e,i,n,l),e.set(i,n,l);for(var u=0;u<8;u++){var y=1<<u,c=g(i,n,u);if(e.within(c.x,c.y)){var f=e.get(c.x,c.y);0!=(l&y)&&y!==a&&0===f&&t(e,r,c.x,c.y,y,o-1)}}};function w(t,e){for(var r=0;r<e.length;r++){var i=e[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}var M={ROOM_SIZE:5,SCALE:32,ITERATIONS:12},E=new y(window.location.hash.substr(1)),x=function(t,e,r,i,n){t.beginPath(),t.moveTo(e,r),t.lineTo(i,n),t.stroke()},m=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e,this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.ctx=this.canvas.getContext("2d"),this.grid=new f(parseInt(e.width/M.SCALE/M.ROOM_SIZE),parseInt(e.height/M.SCALE/M.ROOM_SIZE)),this.reset(),window.addEventListener("keydown",this.handleKeypress.bind(this))}var e,r,i;return e=t,(r=[{key:"reset",value:function(t){for(t&&window.history.pushState(null,null,"#"+E.getState()),this.grid.reset(),O(this.grid,E,parseInt(this.grid.width/2),parseInt(this.grid.height/2),0,M.ITERATIONS),this.player={pos:{x:parseInt(this.grid.width/2),y:parseInt(this.grid.height/2)}},this.numGems=3+Math.round(9*E.next()),this.gems=[];this.gems.length<this.numGems;){var e={x:parseInt(E.next()*this.grid.width),y:parseInt(E.next()*this.grid.height)};0!==this.grid.get(e.x,e.y)&&this.gems.push(e)}this.draw()}},{key:"playerMoveBy",value:function(t,e){var r,i,n,a,o=this.player.pos.x,s=this.player.pos.y;r=500,i=function(r){this.player.pos.x=o+t*r,this.player.pos.y=s+e*r,1===r&&this.checkGemsCollected(),this.draw()}.bind(this),a=null,n=function(t){null===a&&(a=t);var e=(t-a)/r;e<1?(i(e),window.requestAnimationFrame(n)):i(1)},window.requestAnimationFrame(n)}},{key:"checkGemsCollected",value:function(){this.gems=this.gems.filter(function(t){return!(t.x===this.player.pos.x&&t.y===this.player.pos.y)}.bind(this)),0===this.gems.length&&this.reset(!0)}},{key:"handleKeypress",value:function(t){switch(t.key){case"ArrowUp":var e={x:this.player.pos.x,y:this.player.pos.y-1},r=this.grid.get(this.player.pos.x,this.player.pos.y);0!=(this.grid.get(e.x,e.y)&p.South)&&0!=(r&p.North)&&this.playerMoveBy(0,-1),t.preventDefault();break;case"ArrowDown":e={x:this.player.pos.x,y:this.player.pos.y+1},r=this.grid.get(this.player.pos.x,this.player.pos.y),0!=(this.grid.get(e.x,e.y)&p.North)&&0!=(r&p.South)&&this.playerMoveBy(0,1),t.preventDefault();break;case"ArrowLeft":e={x:this.player.pos.x-1,y:this.player.pos.y},r=this.grid.get(this.player.pos.x,this.player.pos.y),0!=(this.grid.get(e.x,e.y)&p.East)&&0!=(r&p.West)&&this.playerMoveBy(-1,0),t.preventDefault();break;case"ArrowRight":e={x:this.player.pos.x+1,y:this.player.pos.y},r=this.grid.get(this.player.pos.x,this.player.pos.y),0!=(this.grid.get(e.x,e.y)&p.West)&&0!=(r&p.East)&&this.playerMoveBy(1,0),t.preventDefault()}}},{key:"draw",value:function(){this.drawMaze(this.ctx),this.drawGems(this.ctx),this.drawPlayer(this.ctx)}},{key:"drawMaze",value:function(t){t.save(),t.scale(M.SCALE,M.SCALE),t.fillStyle="black",t.fillRect(0,0,this.canvas.width,this.canvas.height);for(var e=0;e<this.grid.width;e++)for(var r=0;r<this.grid.height;r++)this.drawRoom(t,e,r);t.restore()}},{key:"drawPlayer",value:function(t){t.save(),t.fillStyle="rgba(80, 220, 255, 1)";var e=M.ROOM_SIZE*M.SCALE,r=.4*e,i=this.player.pos.x*e,n=this.player.pos.y*e;t.fillRect(i+r,n+r,M.SCALE,M.SCALE),t.restore()}},{key:"drawGems",value:function(t){t.save(),t.fillStyle="rgba(80, 255, 80, 1)";for(var e=M.ROOM_SIZE*M.SCALE,r=.4*e,i=0,n=this.gems.length;i<n;i++){var a=this.gems[i].x*e,o=this.gems[i].y*e;t.fillRect(a+r,o+r,M.SCALE,M.SCALE)}t.restore()}},{key:"drawRoom",value:function(t,e,r){var i=this.grid.get(e,r);if(0!=i){var n=e*M.ROOM_SIZE,a=r*M.ROOM_SIZE;t.save(),t.fillStyle="rgba(128,128,128,1)",t.fillRect(n,a,M.ROOM_SIZE,M.ROOM_SIZE),t.fillStyle="rgba(64,64,64,1)",t.fillRect(n+1,a+1,M.ROOM_SIZE-2,M.ROOM_SIZE-2),t.strokeStyle="rgba(64, 64, 64, 1)",function(t,e,r,i){var n=Math.round(M.ROOM_SIZE/3);0!=(i&p.NorthDoor)&&x(t,e+n,r+.5,e+M.ROOM_SIZE-n,r+.5),0!=(i&p.NorthWall)&&x(t,e+1,r+.5,e+M.ROOM_SIZE-1,r+.5),0!=(i&p.EastDoor)&&x(t,e+M.ROOM_SIZE-.5,r+n,e+M.ROOM_SIZE-.5,r+M.ROOM_SIZE-n),0!=(i&p.EastWall)&&x(t,e+M.ROOM_SIZE-.5,r+1,e+M.ROOM_SIZE-.5,r+M.ROOM_SIZE-1),0!=(i&p.SouthDoor)&&x(t,e+n,r+M.ROOM_SIZE-.5,e+M.ROOM_SIZE-n,r+M.ROOM_SIZE-.5),0!=(i&p.SouthWall)&&x(t,e+1,r+M.ROOM_SIZE-.5,e+M.ROOM_SIZE-1,r+M.ROOM_SIZE-.5),0!=(i&p.WestDoor)&&x(t,e+.5,r+n,e+.5,r+M.ROOM_SIZE-n),0!=(i&p.WestWall)&&x(t,e+.5,r+1,e+.5,r+M.ROOM_SIZE-1)}(t,n,a,i),t.restore(),t.save(),t.strokeStyle="rgba(0, 0, 0, .1)",t.scale(1/M.SCALE,1/M.SCALE),t.strokeRect(n*M.SCALE+.5,a*M.SCALE+.5,M.ROOM_SIZE*M.SCALE-1,M.ROOM_SIZE*M.SCALE-1),t.restore()}}}])&&w(e.prototype,r),i&&w(e,i),t}(),b=document.createElement("canvas");document.body.appendChild(b),window.game=new m(b)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,