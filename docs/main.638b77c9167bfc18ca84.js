!function(t){var e={};function i(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){t.exports=i.p+"tiles.957351177f27f601418b28cbeb945306.png"},function(t,e,i){t.exports=i.p+"sprites.35f235d8b1a9b6a7ec04f7293f903504.png"},function(t,e,i){},function(t,e,i){"use strict";i.r(e);i(2);function n(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function r(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function a(t,e,i){return e&&r(t.prototype,e),i&&r(t,i),t}var s=function(t,e,i){return Math.max(e,Math.min(i,t))},o=function(t){return~t>>>0},h=function(t,e,i){var n=(1<<i)-1;return t<<(e%=i)&n|(t&n)>>i-e},l=function(t){for(var e=0,i=1779033703^t.length;e<t.length;e++)i=(i=Math.imul(i^t.charCodeAt(e),3432918353))<<13|i>>>19;return function(){return i=Math.imul(i^i>>>16,2246822507),i=Math.imul(i^i>>>13,3266489909),(i^=i>>>16)>>>0}},u=function(){function t(e){n(this,t),this.state=e}return a(t,[{key:"next",value:function(){var t=this.state+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967295}}]),t}(),c=function(){function t(e){n(this,t),void 0!==e&&(e=parseInt(e,36)),e||(e=(new Date).toISOString(),e=l(e)()),this.generator=new u(e)}return a(t,[{key:"next",value:function(){return this.generator.next()}},{key:"getState",value:function(){return this.generator.state.toString(36)}}]),t}();function f(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var d=function(){function t(e,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=e,this.height=i,this.cells=new Array(this.width*this.height).fill(0)}var e,i,n;return e=t,(i=[{key:"reset",value:function(){this.cells=new Array(this.width*this.height).fill(0)}},{key:"within",value:function(t,e){return t>=0&&t<this.width&&e>=0&&e<this.height}},{key:"set",value:function(t,e,i){t=s(t,0,this.width-1),e=s(e,0,this.height-1),this.cells[e*this.width+t]=i}},{key:"get",value:function(t,e){return t=s(t,0,this.width-1),e=s(e,0,this.height-1),this.cells[e*this.width+t]}},{key:"getDefault",value:function(t,e,i){return this.within(t,e)?this.cells[e*this.width+t]:i}},{key:"fill",value:function(t,e,i,n,r){t=s(t,0,this.width-1),e=s(e,0,this.height-1),i=s(i,0,this.width-t),n=s(n,0,this.height-e);for(var a=0;a<n;++a)for(var o=0;o<i;++o)this.set(t+o,e+a,r)}}])&&f(e.prototype,i),n&&f(e,n),t}();function y(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var v=function(){function t(e,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=e,this.height=i,this.posIndex={},this.typeIndex={}}var e,i,n;return e=t,(i=[{key:"reset",value:function(){this.posIndex={},this.typeIndex={}}},{key:"within",value:function(t,e){return t>=0&&t<this.width&&e>=0&&e<this.height}},{key:"add",value:function(t){var e="".concat(t.x," ").concat(t.y);this.posIndex[e]=t,void 0===this.typeIndex[t.type]&&(this.typeIndex[t.type]=[]),this.typeIndex[t.type].push(t)}},{key:"clear",value:function(t,e){var i=this.get(t,e);if(null!==i){var n=this.typeIndex[i.type].indexOf(i);n>-1&&this.typeIndex[i.type].splice(n,1);var r="".concat(i.x," ").concat(i.y);delete this.posIndex[r]}}},{key:"set",value:function(t,e,i){i.x=s(t,0,this.width-1),i.y=s(e,0,this.height-1),this.clear(t,e),this.add(i)}},{key:"get",value:function(t,e){t=s(t,0,this.width-1),e=s(e,0,this.height-1);var i="".concat(t," ").concat(e),n=this.posIndex[i];return void 0!==n?n:null}},{key:"find",value:function(t){return void 0===this.typeIndex[t]?[]:this.typeIndex[t].slice()}},{key:"remove",value:function(t){this.clear(t.x,t.y)}},{key:"list",value:function(){return Object.values(this.posIndex)}}])&&y(e.prototype,i),n&&y(e,n),t}(),p={NorthDoor:Math.pow(2,0),NorthWall:Math.pow(2,1),EastDoor:Math.pow(2,2),EastWall:Math.pow(2,3),SouthDoor:Math.pow(2,4),SouthWall:Math.pow(2,5),WestDoor:Math.pow(2,6),WestWall:Math.pow(2,7),ALL:256};p.North=p.NorthDoor|p.NorthWall,p.East=p.EastDoor|p.EastWall,p.South=p.SouthDoor|p.SouthWall,p.West=p.WestDoor|p.WestWall,p.DOOR_MASK=p.NorthDoor|p.EastDoor|p.SouthDoor|p.WestDoor,p.WALL_MASK=p.NorthWall|p.EastWall|p.SouthWall|p.WestWall;var w=[{x:0,y:-1},{x:0,y:-1},{x:1,y:0},{x:1,y:0},{x:0,y:1},{x:0,y:1},{x:-1,y:0},{x:-1,y:0}],S=function(t,e,i){return{x:t+w[i].x,y:e+w[i].y}},E=function(t){return h(t,4,8)},g=function(t,e,i){var n=i|h(i,1,8);return e=E(e)&n,t&o(n)|e},I=function t(e,i,n,r,a,s){var l=a=E(a);s>0&&(l=function(t,e){var i=Math.floor(t.next()*p.ALL),n=Math.floor(t.next()*p.ALL),r=i&p.DOOR_MASK|e&p.DOOR_MASK;return(n&p.WALL_MASK|e&p.WALL_MASK)&o(h(r,1,8))|r}(i,a)),l=function(t,e,i,n){for(var r=0;r<8;r+=2){var a=1<<r,s=1<<r+1,h=S(e,i,r);if(t.within(h.x,h.y)){var l=t.get(h.x,h.y);0!==l&&(n=g(n,l,a))}else n&=o(a|s)}return n}(e,n,r,l),e.set(n,r,l);for(var u=0;u<8;u++){var c=1<<u,f=S(n,r,u);if(e.within(f.x,f.y)){var d=e.get(f.x,f.y);0!=(l&c)&&c!==a&&0===d&&t(e,i,f.x,f.y,c,s-1)}}};function m(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var x=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.xDown=null,this.yDown=null,this.element=e,this.element.addEventListener("touchstart",this.handleTouchStart.bind(this),!1),this.element.addEventListener("touchmove",this.handleTouchMove.bind(this),!1)}var e,i,n;return e=t,(i=[{key:"handleTouchStart",value:function(t){this.xDown=t.touches[0].clientX,this.yDown=t.touches[0].clientY}},{key:"handleTouchMove",value:function(t){if(this.xDown&&this.yDown&&this.onSwipe){var e=t.touches[0].clientX,i=t.touches[0].clientY;this.xDiff=this.xDown-e,this.yDiff=this.yDown-i,Math.abs(this.xDiff)>Math.abs(this.yDiff)?this.xDiff>0?this.onSwipe(t,"SwipeLeft"):this.onSwipe(t,"SwipeRight"):(this.yDiff>0?this.onSwipe(t,"SwipeUp"):this.onSwipe(t,"SwipeDown"),t.preventDefault()),this.xDown=null,this.yDown=null}}}])&&m(e.prototype,i),n&&m(e,n),t}(),M=i(0),b=i.n(M),O=i(1),k=i.n(O);function _(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function D(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function L(t,e,i){return e&&D(t.prototype,e),i&&D(t,i),t}var Z,T={ROOM_SIZE:5,TILE_SIZE:8,SPRITE_SIZE:8,SCALE:4,ITERATIONS:12},R=new c(window.location.hash.substr(1)),A=function(t,e,i){return t.get(e,i)*(t.getDefault(e,i-1,1)|t.getDefault(e+1,i,1)<<1|t.getDefault(e,i+1,1)<<2|t.getDefault(e-1,i,1)<<3)},G=function(t,e){try{return new OffscreenCanvas(t,e)}catch(n){var i=document.createElement("canvas");return i.width=t,i.height=e,i}},C=function(t){return new Promise(function(e,i){var n=new Image;n.addEventListener("load",function(){return e(n)}),n.addEventListener("error",function(t){return i(t)}),n.src=t})},W={offset:{x:0,y:-1},mask:p.North},P={offset:{x:1,y:0},mask:p.East},z={offset:{x:0,y:1},mask:p.South},j={offset:{x:-1,y:0},mask:p.West},N=function(){function t(){_(this,t),this.spriteIndex=1,this.type="gem"}return L(t,[{key:"collect",value:function(t){t.gemsCollected+=1}}]),t}(),K=function(){function t(){_(this,t),this.spriteIndex=2,this.type="food",this.stamina=30}return L(t,[{key:"collect",value:function(t){t.stamina=Math.min(100,t.stamina+this.stamina)}}]),t}(),U=function(){function t(e){var i=this;_(this,t),this.canvas=e,this.canvas.width=window.innerWidth-5,this.canvas.height=window.innerHeight-5,this.widthScaled=this.canvas.width/T.SCALE,this.heightScaled=this.canvas.height/T.SCALE,this.ctx=this.canvas.getContext("2d"),this.bgCanvas=G(this.canvas.width,this.canvas.height),this.mazeGrid=new d(parseInt(this.widthScaled/T.ROOM_SIZE/T.TILE_SIZE),parseInt(this.heightScaled/T.ROOM_SIZE/T.TILE_SIZE)),this.entityGrid=new v(this.mazeGrid.width,this.mazeGrid.height),this.tileGrid=new d(this.mazeGrid.width*T.ROOM_SIZE,this.mazeGrid.height*T.ROOM_SIZE),this.player={stamina:100,gemsCollected:0},window.addEventListener("keydown",function(t){return i.handleInput(t,t.key)}),new x(e).onSwipe=function(t,e){return i.handleInput(t,e)},Promise.all([C(b.a),C(k.a)]).then(function(t){i.tiles=t[0],i.sprites=t[1],i.reset()})}return L(t,[{key:"reset",value:function(t){t&&window.history.pushState(null,null,"#"+R.getState()),this.mazeGrid.reset(),this.entityGrid.reset(),this.tileGrid.reset();var e=parseInt(this.mazeGrid.width/2),i=parseInt(this.mazeGrid.height/2);I(this.mazeGrid,R,e,i,0,T.ITERATIONS),function(t,e){var i=new d(t.width,t.height);i.fill(0,0,i.width,i.height,1);for(var n=0,r=e.height;n<r;n++)for(var a=0,s=e.width;a<s;a++){var o=e.get(a,n);if(0!==o){var h=Math.floor(T.ROOM_SIZE/3),l=a*T.ROOM_SIZE,u=n*T.ROOM_SIZE;i.fill(l+1,u+1,T.ROOM_SIZE-2,T.ROOM_SIZE-2,0),0!=(o&p.NorthDoor)&&i.fill(l+1+h,u,h,1,0),0!=(o&p.NorthWall)&&i.fill(l+1,u,T.ROOM_SIZE-2,1,0),0!=(o&p.EastDoor)&&i.fill(l+T.ROOM_SIZE-1,u+1+h,1,h,0),0!=(o&p.EastWall)&&i.fill(l+T.ROOM_SIZE-1,u+1,1,T.ROOM_SIZE-2,0),0!=(o&p.SouthDoor)&&i.fill(l+1+h,u+T.ROOM_SIZE-1,h,1,0),0!=(o&p.SouthWall)&&i.fill(l+1,u+T.ROOM_SIZE-1,T.ROOM_SIZE-2,1,0),0!=(o&p.WestDoor)&&i.fill(l,u+1+h,1,h,0),0!=(o&p.WestWall)&&i.fill(l,u+1,1,T.ROOM_SIZE-2,0)}}for(var c=0,f=t.height;c<f;c++)for(var y=0,v=t.width;y<v;y++)t.set(y,c,A(i,y,c))}(this.tileGrid,this.mazeGrid),this.drawMaze(this.bgCanvas.getContext("2d")),this.player.pos={x:e,y:i,dir:1},this.generateEntities(N,3,12),this.generateEntities(K,1,5),this.draw()}},{key:"generateEntities",value:function(t,e,i){for(var n=e+Math.round(R.next()*(i-e)),r=0,a=1e3;r<n&&a>0;){a--;var s=parseInt(R.next()*this.mazeGrid.width),o=parseInt(R.next()*this.mazeGrid.height);0!==this.mazeGrid.get(s,o)&&null===this.entityGrid.get(s,o)&&(this.entityGrid.set(s,o,new t),r++)}}},{key:"playerMoveBy",value:function(t){var e,i,n,r,a=this.player.pos.x,s=this.player.pos.y;this.player.pos.dir=t.x>=0?1:-1,e=500,i=function(e){this.player.pos.x=a+t.x*e,this.player.pos.y=s+t.y*e,1===e&&(this.player.stamina-=3,this.checkEntities(),this.checkEndGame()),this.draw()}.bind(this),r=null,n=function(t){null===r&&(r=t);var a=(t-r)/e;a<1?(i(a),window.requestAnimationFrame(n)):i(1)},window.requestAnimationFrame(n)}},{key:"playerMove",value:function(t){var e={x:this.player.pos.x+t.offset.x,y:this.player.pos.y+t.offset.y},i=this.mazeGrid.get(this.player.pos.x,this.player.pos.y),n=0!=(this.mazeGrid.get(e.x,e.y)&E(t.mask));0!=(i&t.mask)&&n&&this.playerMoveBy(t.offset)}},{key:"checkEntities",value:function(){var t=this.entityGrid.get(this.player.pos.x,this.player.pos.y);t&&(t.collect(this.player),this.entityGrid.remove(t))}},{key:"checkEndGame",value:function(){console.log(this.player);var t=!1;0===this.entityGrid.find("gem").length&&(this.player.stamina=Math.min(this.player.stamina+50,100),t=!0),this.player.stamina<=0&&(this.player.stamina=100,this.player.gemsCollected=0,t=!0),t&&this.reset(!0)}},{key:"handleInput",value:function(t,e){switch(e){case"SwipeUp":case"ArrowUp":this.playerMove(W),t.preventDefault();break;case"SwipeDown":case"ArrowDown":this.playerMove(z),t.preventDefault();break;case"SwipeLeft":case"ArrowLeft":this.playerMove(j),t.preventDefault();break;case"SwipeRight":case"ArrowRight":this.playerMove(P),t.preventDefault()}}},{key:"draw",value:function(){this.ctx.drawImage(this.bgCanvas,0,0),this.drawEntities(this.ctx),this.drawPlayer(this.ctx),this.drawHUD(this.ctx)}},{key:"drawMaze",value:function(t){t.save(),t.scale(T.SCALE,T.SCALE),t.imageSmoothingEnabled=!1,t.fillStyle="rgba(48, 52, 109, 1)",t.fillRect(0,0,this.widthScaled,this.heightScaled);for(var e=0,i=this.tileGrid.height;e<i;e++)for(var n=0,r=this.tileGrid.width;n<r;n++)this.drawTile(t,n,e,this.tileGrid.get(n,e));t.restore()}},{key:"drawTile",value:function(t,e,i,n){var r=n%4*T.TILE_SIZE,a=Math.floor(n/4)*T.TILE_SIZE;t.drawImage(this.tiles,r,a,T.TILE_SIZE,T.TILE_SIZE,e*T.TILE_SIZE,i*T.TILE_SIZE,T.TILE_SIZE,T.TILE_SIZE)}},{key:"drawPlayer",value:function(t){var e=T.ROOM_SIZE*T.TILE_SIZE,i=.5*e-.5*T.SPRITE_SIZE;t.save(),t.scale(T.SCALE,T.SCALE),t.translate(this.player.pos.x*e+i,this.player.pos.y*e+i),t.imageSmoothingEnabled=!1,t.drawImage(this.sprites,0,0,T.SPRITE_SIZE,T.SPRITE_SIZE,0,0,T.SPRITE_SIZE,T.SPRITE_SIZE),t.restore()}},{key:"drawEntities",value:function(t){var e=T.ROOM_SIZE*T.TILE_SIZE,i=.5*e-.5*T.SPRITE_SIZE,n=this.entityGrid.list();t.save(),t.scale(T.SCALE,T.SCALE),t.imageSmoothingEnabled=!1;for(var r=0,a=n.length;r<a;r++)t.drawImage(this.sprites,n[r].spriteIndex*T.SPRITE_SIZE,0,T.SPRITE_SIZE,T.SPRITE_SIZE,n[r].x*e+i,n[r].y*e+i,T.SPRITE_SIZE,T.SPRITE_SIZE);t.restore()}},{key:"drawHUD",value:function(t){var e=this.widthScaled-10,i=e*this.player.stamina/100-2,n=this.heightScaled-5;t.save(),t.scale(T.SCALE,T.SCALE),t.fillStyle="rgba(68, 36, 52, 1)",t.fillRect(5,n,e,5),t.fillStyle="rgba(210, 125, 44, 1)",t.fillRect(6,n+1,i,3),t.font="bold 8px serif",t.fillText("GEMS: ".concat(this.player.gemsCollected),5,this.heightScaled-10),t.restore()}}]),t}(),H=document.createElement("div");Z=function(t){H.style.display="none",H.removeEventListener("click",Z)},H.classList.add("start-screen"),H.addEventListener("click",Z),H.innerHTML='\n<div>\n<div class="title">Collect Gems</div>\n<div>Press arrow keys to move.</div>\n<div>Or swipe to move.</div>\n<div>Click or tap to start</div>\n</div>\n';var q=document.createElement("canvas");document.body.appendChild(q),document.body.appendChild(H),window.game=new U(q)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,