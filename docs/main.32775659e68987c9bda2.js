!function(t){var e={};function i(r){if(e[r])return e[r].exports;var n=e[r]={i:r,l:!1,exports:{}};return t[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(r,n,function(e){return t[e]}.bind(null,n));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=3)}([function(t,e,i){t.exports=i.p+"tiles.c2f1160b45a03498badfba3140f4022c.png"},function(t,e,i){t.exports=i.p+"sprites.d7e375c22eb961e72867280e349a8e49.png"},function(t,e,i){},function(t,e,i){"use strict";i.r(e);i(2);function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function n(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function s(t,e,i){return e&&n(t.prototype,e),i&&n(t,i),t}var a=function(t,e,i){return Math.max(e,Math.min(i,t))},o=function(t){return~t>>>0},h=function(t,e,i){var r=(1<<i)-1;return t<<(e%=i)&r|(t&r)>>i-e},l=function(t){for(var e=0,i=1779033703^t.length;e<t.length;e++)i=(i=Math.imul(i^t.charCodeAt(e),3432918353))<<13|i>>>19;return function(){return i=Math.imul(i^i>>>16,2246822507),i=Math.imul(i^i>>>13,3266489909),(i^=i>>>16)>>>0}},u=function(){function t(e){r(this,t),this.state=e}return s(t,[{key:"next",value:function(){var t=this.state+=1831565813;return t=Math.imul(t^t>>>15,1|t),(((t^=t+Math.imul(t^t>>>7,61|t))^t>>>14)>>>0)/4294967295}}]),t}(),f=function(){function t(e){r(this,t),void 0!==e&&(e=parseInt(e,36)),e||(e=(new Date).toISOString(),e=l(e)()),this.generator=new u(e)}return s(t,[{key:"next",value:function(){return this.generator.next()}},{key:"getState",value:function(){return this.generator.state.toString(36)}}]),t}();function c(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var p=function(){function t(e,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.width=e,this.height=i,this.cells=new Array(this.width*this.height).fill(0)}var e,i,r;return e=t,(i=[{key:"reset",value:function(){this.cells=new Array(this.width*this.height).fill(0)}},{key:"within",value:function(t,e){return t>=0&&t<this.width&&e>=0&&e<this.height}},{key:"set",value:function(t,e,i){t=a(t,0,this.width-1),e=a(e,0,this.height-1),this.cells[e*this.width+t]=i}},{key:"get",value:function(t,e){return t=a(t,0,this.width-1),e=a(e,0,this.height-1),this.cells[e*this.width+t]}},{key:"getDefault",value:function(t,e,i){return this.within(t,e)?this.cells[e*this.width+t]:i}},{key:"fill",value:function(t,e,i,r,n){t=a(t,0,this.width-1),e=a(e,0,this.height-1),i=a(i,0,this.width-t),r=a(r,0,this.height-e);for(var s=0;s<r;++s)for(var o=0;o<i;++o)this.set(t+o,e+s,n)}}])&&c(e.prototype,i),r&&c(e,r),t}(),d={NorthDoor:Math.pow(2,0),NorthWall:Math.pow(2,1),EastDoor:Math.pow(2,2),EastWall:Math.pow(2,3),SouthDoor:Math.pow(2,4),SouthWall:Math.pow(2,5),WestDoor:Math.pow(2,6),WestWall:Math.pow(2,7),ALL:256};d.North=d.NorthDoor|d.NorthWall,d.East=d.EastDoor|d.EastWall,d.South=d.SouthDoor|d.SouthWall,d.West=d.WestDoor|d.WestWall,d.DOOR_MASK=d.NorthDoor|d.EastDoor|d.SouthDoor|d.WestDoor,d.WALL_MASK=d.NorthWall|d.EastWall|d.SouthWall|d.WestWall;var v=[{x:0,y:-1},{x:0,y:-1},{x:1,y:0},{x:1,y:0},{x:0,y:1},{x:0,y:1},{x:-1,y:0},{x:-1,y:0}],y=function(t,e,i){return{x:t+v[i].x,y:e+v[i].y}},w=function(t){return h(t,4,8)},S=function(t,e,i){var r=i|h(i,1,8);return e=w(e)&r,t&o(r)|e},g=function t(e,i,r,n,s,a){var l=s=w(s);a>0&&(l=function(t,e){var i=Math.floor(t.next()*d.ALL),r=Math.floor(t.next()*d.ALL),n=i&d.DOOR_MASK|e&d.DOOR_MASK;return(r&d.WALL_MASK|e&d.WALL_MASK)&o(h(n,1,8))|n}(i,s)),l=function(t,e,i,r){for(var n=0;n<8;n+=2){var s=1<<n,a=1<<n+1,h=y(e,i,n);if(t.within(h.x,h.y)){var l=t.get(h.x,h.y);0!==l&&(r=S(r,l,s))}else r&=o(s|a)}return r}(e,r,n,l),e.set(r,n,l);for(var u=0;u<8;u++){var f=1<<u,c=y(r,n,u);if(e.within(c.x,c.y)){var p=e.get(c.x,c.y);0!=(l&f)&&f!==s&&0===p&&t(e,i,c.x,c.y,f,a-1)}}};function m(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var M=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.xDown=null,this.yDown=null,this.element=e,this.element.addEventListener("touchstart",this.handleTouchStart.bind(this),!1),this.element.addEventListener("touchmove",this.handleTouchMove.bind(this),!1)}var e,i,r;return e=t,(i=[{key:"handleTouchStart",value:function(t){this.xDown=t.touches[0].clientX,this.yDown=t.touches[0].clientY}},{key:"handleTouchMove",value:function(t){if(this.xDown&&this.yDown&&this.onSwipe){var e=t.touches[0].clientX,i=t.touches[0].clientY;this.xDiff=this.xDown-e,this.yDiff=this.yDown-i,Math.abs(this.xDiff)>Math.abs(this.yDiff)?this.xDiff>0?this.onSwipe(t,"SwipeLeft"):this.onSwipe(t,"SwipeRight"):(this.yDiff>0?this.onSwipe(t,"SwipeUp"):this.onSwipe(t,"SwipeDown"),t.preventDefault()),this.xDown=null,this.yDown=null}}}])&&m(e.prototype,i),r&&m(e,r),t}(),x=i(0),O=i.n(x),E=i(1),b=i.n(E);function D(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var I,k={ROOM_SIZE:5,SCALE:32,ITERATIONS:12},z=new f(window.location.hash.substr(1)),L=function(t,e,i){return t.get(e,i)*(t.getDefault(e,i-1,1)|t.getDefault(e+1,i,1)<<1|t.getDefault(e,i+1,1)<<2|t.getDefault(e-1,i,1)<<3)},A=function(t,e){try{return new OffscreenCanvas(t,e)}catch(r){var i=document.createElement("canvas");return i.width=t,i.height=e,i}},_=function(t){return new Promise(function(e,i){var r=new Image;r.addEventListener("load",function(){return e(r)}),r.addEventListener("error",function(t){return i(t)}),r.src=t})},W={offset:{x:0,y:-1},mask:d.North},R={offset:{x:1,y:0},mask:d.East},C={offset:{x:0,y:1},mask:d.South},T={offset:{x:-1,y:0},mask:d.West},G=function(){function t(e){var i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e,this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.ctx=this.canvas.getContext("2d"),this.bgCanvas=A(this.canvas.width,this.canvas.height),this.mazeGrid=new p(parseInt(e.width/k.SCALE/k.ROOM_SIZE),parseInt(e.height/k.SCALE/k.ROOM_SIZE)),this.tileGrid=new p(parseInt(e.width/k.SCALE),parseInt(e.height/k.SCALE)),this.player={health:3},window.addEventListener("keydown",function(t){return i.handleInput(t,t.key)}),new M(e).onSwipe=function(t,e){return i.handleInput(t,e)},Promise.all([_(O.a),_(b.a)]).then(function(t){i.tiles=t[0],i.tileSize=i.tiles.naturalWidth/4,i.sprites=t[1],i.spriteSize=8,i.reset()})}var e,i,r;return e=t,(i=[{key:"reset",value:function(t){t&&window.history.pushState(null,null,"#"+z.getState()),this.mazeGrid.reset(),this.tileGrid.reset();var e=parseInt(this.mazeGrid.width/2),i=parseInt(this.mazeGrid.height/2);g(this.mazeGrid,z,e,i,0,k.ITERATIONS),function(t,e){var i=new p(t.width,t.height);i.fill(0,0,i.width,i.height,1);for(var r=0,n=e.height;r<n;r++)for(var s=0,a=e.width;s<a;s++){var o=e.get(s,r);if(0!==o){var h=Math.floor(k.ROOM_SIZE/3),l=s*k.ROOM_SIZE,u=r*k.ROOM_SIZE;i.fill(l+1,u+1,k.ROOM_SIZE-2,k.ROOM_SIZE-2,0),0!=(o&d.NorthDoor)&&i.fill(l+1+h,u,h,1,0),0!=(o&d.NorthWall)&&i.fill(l+1,u,k.ROOM_SIZE-2,1,0),0!=(o&d.EastDoor)&&i.fill(l+k.ROOM_SIZE-1,u+1+h,1,h,0),0!=(o&d.EastWall)&&i.fill(l+k.ROOM_SIZE-1,u+1,1,k.ROOM_SIZE-2,0),0!=(o&d.SouthDoor)&&i.fill(l+1+h,u+k.ROOM_SIZE-1,h,1,0),0!=(o&d.SouthWall)&&i.fill(l+1,u+k.ROOM_SIZE-1,k.ROOM_SIZE-2,1,0),0!=(o&d.WestDoor)&&i.fill(l,u+1+h,1,h,0),0!=(o&d.WestWall)&&i.fill(l,u+1,1,k.ROOM_SIZE-2,0)}}for(var f=0,c=t.height;f<c;f++)for(var v=0,y=t.width;v<y;v++)t.set(v,f,L(i,v,f))}(this.tileGrid,this.mazeGrid),this.drawMaze(this.bgCanvas.getContext("2d")),this.player.pos={x:e,y:i,dir:1},this.generateTreasures(),this.draw()}},{key:"generateTreasures",value:function(){this.numTreasures=3+Math.round(9*z.next()),this.treasures=[];for(var t=1e3;this.treasures.length<this.numTreasures&&t>0;){t--;var e={x:parseInt(z.next()*this.mazeGrid.width),y:parseInt(z.next()*this.mazeGrid.height)};0!==this.mazeGrid.get(e.x,e.y)&&this.treasures.push(e)}}},{key:"playerMoveBy",value:function(t){var e,i,r,n,s=this.player.pos.x,a=this.player.pos.y;this.player.pos.dir=t.x>=0?1:-1,e=500,i=function(e){this.player.pos.x=s+t.x*e,this.player.pos.y=a+t.y*e,1===e&&this.checkGemsCollected(),this.draw()}.bind(this),n=null,r=function(t){null===n&&(n=t);var s=(t-n)/e;s<1?(i(s),window.requestAnimationFrame(r)):i(1)},window.requestAnimationFrame(r)}},{key:"playerMove",value:function(t){var e={x:this.player.pos.x+t.offset.x,y:this.player.pos.y+t.offset.y},i=this.mazeGrid.get(this.player.pos.x,this.player.pos.y),r=0!=(this.mazeGrid.get(e.x,e.y)&w(t.mask));0!=(i&t.mask)&&r&&this.playerMoveBy(t.offset)}},{key:"checkGemsCollected",value:function(){this.treasures=this.treasures.filter(function(t){return!(t.x===this.player.pos.x&&t.y===this.player.pos.y)}.bind(this)),0===this.treasures.length&&this.reset(!0)}},{key:"handleInput",value:function(t,e){switch(e){case"SwipeUp":case"ArrowUp":this.playerMove(W),t.preventDefault();break;case"SwipeDown":case"ArrowDown":this.playerMove(C),t.preventDefault();break;case"SwipeLeft":case"ArrowLeft":this.playerMove(T),t.preventDefault();break;case"SwipeRight":case"ArrowRight":this.playerMove(R),t.preventDefault()}}},{key:"draw",value:function(){this.ctx.drawImage(this.bgCanvas,0,0),this.drawTreasures(this.ctx),this.drawPlayer(this.ctx)}},{key:"drawMaze",value:function(t){t.save(),t.scale(parseInt(k.SCALE/this.tileSize),parseInt(k.SCALE/this.tileSize)),t.imageSmoothingEnabled=!1;for(var e=0,i=this.tileGrid.height;e<i;e++)for(var r=0,n=this.tileGrid.width;r<n;r++)this.drawTile(t,r,e,this.tileGrid.get(r,e));t.restore()}},{key:"drawTile",value:function(t,e,i,r){var n=r%4*this.tileSize,s=Math.floor(r/4)*this.tileSize;t.drawImage(this.tiles,n,s,this.tileSize,this.tileSize,e*this.tileSize,i*this.tileSize,this.tileSize,this.tileSize)}},{key:"drawPlayer",value:function(t){var e=Math.floor(k.SCALE/this.spriteSize),i=k.ROOM_SIZE*this.spriteSize,r=k.ROOM_SIZE*this.spriteSize*.5-.5*this.spriteSize;t.save(),t.scale(e,e),t.translate(this.player.pos.x*i+r,this.player.pos.y*i+r),t.imageSmoothingEnabled=!1,t.scale(this.player.pos.dir,1),t.drawImage(this.sprites,0,0,this.spriteSize,this.spriteSize,0,0,this.spriteSize*this.player.pos.dir,this.spriteSize),t.restore()}},{key:"drawTreasures",value:function(t){var e=Math.floor(k.SCALE/this.spriteSize),i=k.ROOM_SIZE*this.spriteSize,r=k.ROOM_SIZE*this.spriteSize*.5-.5*this.spriteSize;t.save(),t.scale(e,e),t.imageSmoothingEnabled=!1;for(var n=0,s=this.treasures.length;n<s;n++)t.drawImage(this.sprites,8,0,this.spriteSize,this.spriteSize,this.treasures[n].x*i+r,this.treasures[n].y*i+r,this.spriteSize,this.spriteSize);t.restore()}}])&&D(e.prototype,i),r&&D(e,r),t}(),Z=document.createElement("div");I=function(t){Z.style.display="none",Z.removeEventListener("click",I)},Z.classList.add("start-screen"),Z.addEventListener("click",I),Z.innerHTML='\n<div>\n<div class="title">Collect Gems</div>\n<div>Press arrow keys to move.</div>\n<div>Or swipe to move.</div>\n<div>Click or tap to start</div>\n</div>\n';var P=document.createElement("canvas");document.body.appendChild(P),document.body.appendChild(Z),window.game=new G(P)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,